name: elred_assignment
description: A new Flutter project.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=2.19.1 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  window_size:
    git:
      url: https://github.com/google/flutter-desktop-embedding.git
      path: plugins/window_size
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  connectivity_plus: ^3.0.2
  http: ^0.13.5
  datetime_picker_formfield: ^2.0.0
  intl: ^0.17.0
  path_provider: ^2.0.14
  firebase_core: ^2.12.0
  cloud_firestore: ^4.3.1
  firebase_auth: ^4.6.0
  google_sign_in: ^6.1.0
  firebase_core_platform_interface: 4.8.0
  flutter_bloc: ^8.1.3

  # An abstract class that helps to implement equality without needing to explicitly
  # override == and hashCode
  equatable: ^2.0.3
  fluttertoast: ^8.0.9
  provider: ^6.0.5
  font_awesome_flutter: ^10.4.0
  animated_text_kit: ^4.2.2

  permission_handler: ^10.2.0
  agora_rtc_engine: ^6.1.0
  agora_rtm: ^1.5.0

  cloud_functions: ^4.3.1
  firebase_messaging: ^14.6.1
  firebase_storage: ^11.2.1
  image_picker: ^0.8.5+3
  flutter_local_notifications: ^11.0.1
  flutter_isolate: ^2.0.4
  flutter_downloader: ^1.10.4
  # A powerful Http client for Dart, which supports interceptors, FormData, Request Cancellation,
  # File Downloading, Timeout etc.
  dio: ^4.0.6
  percent_indicator: ^4.2.2
  photo_view: 0.14.0
  # Flutter plugin for launching a URL in the mobile platform. Supports iOS and Android.
  url_launcher: ^6.1.7

  # Flutter library to load and cache network images. Can also be used with placeholder and
  # error widgets.
  cached_network_image: ^3.2.3
  # Simple direct Service Locator that allows to decouple the interface from a concrete
  # implementation and to access the concrete implementation from everywhere in your App
#  get_it: ^4.0.1

  # Functional Programming in Dart. Purify your Dart code using efficient immutable data structures,
  # monads, lenses and other FP tools.
  dartz: ^0.10.1

  # A Flutter plugin for adapting screen and font size.
  flutter_screenutil: ^5.6.0

  # An SVG rendering and widget library for Flutter, which allows painting and displaying Scalable
  # Vector Graphics 1.1 files.
  flutter_svg: ^2.0.4

  # Lightweight and blazing fast key-value database written in pure Dart.
  hive: ^2.2.3

  # Extension for Hive. Make it easier to use Hive in Flutter apps.
  hive_flutter: ^1.1.0
  google_fonts: ^4.0.4
  flutter_riverpod: ^2.3.6
  go_router: ^10.0.0
  english_words: ^4.0.0
  flame: ^1.8.1
  flame_forge2d: ^0.14.1
  get: ^4.6.5
  get_storage: ^2.1.1
  dots_indicator: ^3.0.0
  carousel_slider: ^4.2.1





#  firebase_dynamic_links: ^5.3.0
#  url_launcher: ^6.1.11
dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

  # Tools to write binaries that run builders.
  build_runner: ^2.3.0

  # A mock framework inspired by Mockito.
  mockito: ^5.4.0

  # A testing library which makes it easy to test blocs.
  bloc_test: ^9.1.0

  # Automatically generate code for converting to and from JSON by annotating Dart classes.
  json_serializable: ^6.6.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/
    - assets/images/
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
